{"ast":null,"code":"import _regeneratorRuntime from \"/Users/gabrielgodwin/dev/groove/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/gabrielgodwin/dev/groove/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport Search from \"../../components/Searchbox/Search.vue\";\nimport PopularAlbums from \"../../container/PopularAlbums\";\nexport default {\n  name: \"Albums\",\n  components: {\n    PopularAlbums: PopularAlbums,\n    Search: Search\n  },\n  data: function data() {\n    return {\n      searchValue: this.$route.query.search,\n      albums: [],\n      loading: false\n    };\n  },\n  created: function created() {\n    this.getSearchResult();\n  },\n  methods: {\n    getSearchResult: function getSearchResult() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var accessToken, config, result, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.loading = true;\n                accessToken = localStorage.getItem(\"access_token\");\n                config = {\n                  headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \".concat(accessToken)\n                  }\n                };\n                _context.prev = 3;\n                _context.next = 6;\n                return fetch(\"https://api.spotify.com/v1/search?q=\".concat(_this.searchValue, \"&type=album\"), config);\n\n              case 6:\n                result = _context.sent;\n                _context.next = 9;\n                return result.json();\n\n              case 9:\n                response = _context.sent;\n                _this.albums = response.albums.items;\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](3);\n                return _context.abrupt(\"return\", _context.t0);\n\n              case 16:\n                _context.prev = 16;\n                _this.loading = false;\n                return _context.finish(16);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 13, 16, 19]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;AAuBA,OAAOA,MAAP,MAAmB,uCAAnB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AAEA,eAAe;EACbC,IAAI,EAAE,QADO;EAEbC,UAAU,EAAE;IACVF,aAAa,EAAbA,aADU;IAEVD,MAAM,EAANA;EAFU,CAFC;EAMbI,IANa,kBAMN;IACL,OAAO;MACLC,WAAW,EAAE,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,MAD1B;MAELC,MAAM,EAAE,EAFH;MAGLC,OAAO,EAAE;IAHJ,CAAP;EAKD,CAZY;EAabC,OAba,qBAaH;IACR,KAAKC,eAAL;EACD,CAfY;EAgBbC,OAAO,EAAE;IACDD,eADC,6BACiB;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACtB,KAAI,CAACF,OAAL,GAAe,IAAf;gBACMI,WAFgB,GAEFC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAFE;gBAGhBC,MAHgB,GAGP;kBACbC,OAAO,EAAE;oBACP,gBAAgB,kBADT;oBAEPC,aAAa,mBAAYL,WAAZ;kBAFN;gBADI,CAHO;gBAAA;gBAAA;gBAAA,OAUCM,KAAK,+CACe,KAAI,CAACf,WADpB,kBAExBY,MAFwB,CAVN;;cAAA;gBAUdI,MAVc;gBAAA;gBAAA,OAcGA,MAAM,CAACC,IAAP,EAdH;;cAAA;gBAcdC,QAdc;gBAepB,KAAI,CAACd,MAAL,GAAcc,QAAQ,CAACd,MAAT,CAAgBe,KAA9B;gBAfoB;gBAAA;;cAAA;gBAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAmBpB,KAAI,CAACd,OAAL,GAAe,KAAf;gBAnBoB;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAqBvB;EAtBM;AAhBI,CAAf","names":["Search","PopularAlbums","name","components","data","searchValue","$route","query","search","albums","loading","created","getSearchResult","methods","accessToken","localStorage","getItem","config","headers","Authorization","fetch","result","json","response","items"],"sourceRoot":"","sources":["/Users/gabrielgodwin/dev/groove/src/views/Albums/Albums.vue"],"sourcesContent":["<template>\n  <div class=\"albums\">\n    <PopularAlbums :albums=\"albums\" :loading=\"loading\">\n      <div class=\"albums__content fade-in\">\n        <img\n          @click=\"$router.push({ name: 'home' })\"\n          src=\"@/assets/arrow.svg\"\n          alt=\"search\"\n        />\n        <h1 class=\"albums__content_title\">\n          Albums <br />\n          matching \"{{ searchValue }}\"\n        </h1>\n        <p class=\"albums__content_caption\">\n          Find new music you love with a search\n        </p>\n        <Search v-model:inputValue=\"searchValue\" @enter=\"getSearchResult\" />\n      </div>\n    </PopularAlbums>\n  </div>\n</template>\n\n<script>\nimport Search from \"../../components/Searchbox/Search.vue\";\nimport PopularAlbums from \"../../container/PopularAlbums\";\n\nexport default {\n  name: \"Albums\",\n  components: {\n    PopularAlbums,\n    Search,\n  },\n  data() {\n    return {\n      searchValue: this.$route.query.search,\n      albums: [],\n      loading: false,\n    };\n  },\n  created() {\n    this.getSearchResult();\n  },\n  methods: {\n    async getSearchResult() {\n      this.loading = true;\n      const accessToken = localStorage.getItem(\"access_token\");\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${accessToken}`,\n        },\n      };\n      try {\n        const result = await fetch(\n          `https://api.spotify.com/v1/search?q=${this.searchValue}&type=album`,\n          config\n        );\n        const response = await result.json();\n        this.albums = response.albums.items;\n      } catch (err) {\n        return err;\n      } finally {\n        this.loading = false;\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped src=\"./_albums.scss\"></style>\n"]},"metadata":{},"sourceType":"module"}